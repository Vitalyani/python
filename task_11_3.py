# 3. Создайте собственный класс-исключение, используемый для проверки содержимого списка на наличие только чисел.
# Техническое задание:
#
# Данные запрашиваются у пользователя по одному элементу.
# Длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
# Список заполняется только числами. Для простоты ввода - целыми.
# При вводе не числа выбрасывается исключение. Оно корректно обрабатывается и ошибочные данные в список не заносятся. Отобразить диагностическое сообщение о неправильном вводе.
# Примечание:
#
# Вы можете написать функцию для проверки корректности введенных пользователем данных, тогда исключение должно выбрасываться в ней, такой вариант предпочтительнее. Но можете все делать в основной программе, тогда вам могут понадобятся вложенные блоки try except, а могут и не потребоваться.

class MyError(Exception):
    def __init__(self, txt):
        self.txt = txt
    # def __str__(self):
    #     return self.txt
if __name__ == "__main__":
    my_list = []
    print('Для заполнения списка необходимо вводить числа по одному.\n'
          'Элементы запрашиваются до тех пор, пока не будет введено "stop"\n')
    while True:
        user_input = input('Введите число или "stop":')
        if user_input == "stop":
            break
        try:
            if not user_input.isdigit():
                raise MyError(f'Упс! "{user_input}" - не число!')
            my_list.append(int(user_input))
        except MyError as e:
            print(e)
    print(f"итоговый список: {my_list}")